CMAKE_MINIMUM_REQUIRED(VERSION 2.4)
Project(@PROJNAME@)

# Set Wt include and library paths
INCLUDE_DIRECTORIES("@WT_INCLUDE_PATH@")
LINK_DIRECTORIES("@WT_LIB_PATH@")

# If Visual Studio IDE
IF(MSVC_IDE)
	# Copy user file
  FILE(COPY ${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME}.vcxproj.user DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
ENDIF(MSVC_IDE)

# If Eclipse IDE
IF(${CMAKE_EXTRA_GENERATOR} MATCHES ".*Eclipse.*")
	IF(${CMAKE_BUILD_TYPE} STREQUAL "Debug")
		# Copy debug user file
    FILE(COPY ${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME}-debug.exe.launch DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
	ENDIF()
	IF(${CMAKE_BUILD_TYPE} STREQUAL "Release")
		# Copy release user file
    FILE(COPY ${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME}-release.exe.launch DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
	ENDIF()
ENDIF()

# Copy resources to build tree
FILE(COPY ${CMAKE_CURRENT_SOURCE_DIR}/resources DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

SET(@PROJNAMELOWER@_SRC main.cpp
               @PROJNAMELOWER@.cpp)

# If Visual Studio IDE
IF(MSVC_IDE)
	SET(@PROJNAMELOWER@_SRC ${@PROJNAMELOWER@_SRC} @PROJNAMELOWER@.h
		                         ui_@PROJNAMELOWER@.h)
ENDIF(MSVC_IDE)

ADD_EXECUTABLE(@PROJNAME@ ${@PROJNAMELOWER@_SRC})

TARGET_LINK_LIBRARIES(@PROJNAME@
  debug @WT_DEBUG@ optimized @WT_RELEASE@
  debug @WTHTTP_DEBUG@ optimized @WTHTTP_RELEASE@
  debug @BOOST_DATE_TIME_DEBUG@ optimized @BOOST_DATE_TIME_RELEASE@
  debug @BOOST_FILESYSTEM_DEBUG@ optimized @BOOST_FILESYSTEM_RELEASE@
  debug @BOOST_PROGRAM_OPTIONS_DEBUG@ optimized @BOOST_PROGRAM_OPTIONS_RELEASE@
  debug @BOOST_REGEX_DEBUG@ optimized @BOOST_REGEX_RELEASE@
  debug @BOOST_SIGNALS_DEBUG@ optimized @BOOST_SIGNALS_RELEASE@
  debug @BOOST_SYSTEM_DEBUG@ optimized @BOOST_SYSTEM_RELEASE@
  debug @BOOST_THREAD_DEBUG@ optimized @BOOST_THREAD_RELEASE@
  debug @BOOST_RANDOM_DEBUG@ optimized @BOOST_RANDOM_RELEASE@
  )
